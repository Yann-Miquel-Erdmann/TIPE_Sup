Program -> Decl Decl_star
Decl_star -> Decl Decl_star | E

Decl -> Include | TypeSpec Id VarDecl_or_FunDecl
VarDecl_or_FunDecl -> VarDecl | FunDecl
Include -> KwInclude Lib

VarDecl -> Assign_Expr_opt Comma_VarDeclInit_star SemiColon
Comma_VarDeclInit_star -> Comma VarDeclInit Comma_VarDeclInit_star | E
VarDeclInit -> Id Assign_Expr_opt
Assign_Expr_opt -> Assign Expr | E


// no parameters for now
FunDecl -> LParenthesis RParenthesis CompoundStmt

CompoundStmt -> LBracket Stmt_star RBracket
Stmt_star -> Stmt Stmt_star | E

Stmt -> TypeSpec Id VarDecl | Assign SemiColon | IfStmt | PrintStmt

VarAssign -> Id Assign Expr

IfStmt -> KwIf LParenthesis Expr RParenthesis CompoundStmt Else_If_star Else_opt
Else_If_star -> KwElse KwIf LParenthesis Expr RParenthesis CompoundStmt Else_If_star | E
Else_opt -> KwElse CompoundStmt | E
LParenthesis_Expr_RParenthesis_opt -> LParenthesis Expr RParenthesis | E

WhileStmt -> KwWhile LParenthesis Expr RParenthesis CompoundStmt
ForStmt -> KwFor LParenthesis VarAssign SemiColon Expr SemiColon Expr RParenthesis CompoundStmt

PrintStmt -> KwPrintf LParenthesis StrConst Comma_Expr_star RParenthesis SemiColon
Comma_Expr_star -> Comma Expr Comma_Expr_star | E

Expr -> Primary | Binary
Primary -> LParenthesis Expr RParenthesis | Id PostOperator_opt | IntConst | FloatConst | BoolConst | NullConst
PostOperator_opt -> Decr | Incr | InPlaceOperator Expr | E

// --------------------- Binary
Binary -> LogOrExpr
LogOrExpr -> LogAndExpr LogicalOr_LogOrExpr_star
LogicalOr_LogOrExpr_star -> LogicalOr LogAndExpr LogicalOr_LogOrExpr_star | E

LogAndExpr -> BitorExpr LogicalAnd_LogAndExpr_star
LogicalAnd_LogAndExpr_star -> LogicalAnd BitorExpr LogicalAnd_LogAndExpr_star | E

BitorExpr -> BitxorExpr BitwiseOr_BitorExpr_star
BitwiseOr_BitorExpr_star -> BitwiseOr BitxorExpr BitwiseOr_BitorExpr_star | E

BitxorExpr -> BitandExpr BitwiseXor_BitxorExpr_star
BitwiseXor_BitxorExpr_star -> BitwiseXor BitandExpr BitwiseXor_BitxorExpr_star | E

BitandExpr -> EqopExpr BitwiseAnd_BitandExpr_star
BitwiseAnd_BitandExpr_star -> BitwiseAnd EqopExpr BitwiseAnd_BitandExpr_star | E

EqopExpr -> RelopExpr Equal_or_NotEqual_EqopExpr_star
Equal_or_NotEqual_EqopExpr_star -> Equal_or_NotEqual RelopExpr Equal_or_NotEqual_EqopExpr_star | E
Equal_or_NotEqual -> Equal | NotEqual

RelopExpr -> ShiftExpr Comparator_RelopExpr_star
Comparator_RelopExpr_star -> Comparator ShiftExpr Comparator_RelopExpr_star | E
Comparator -> Less | StrictLess | Greater | StrictGreater

ShiftExpr -> AddExpr BitShift_ShiftExpr_star
BitShift_ShiftExpr_star -> BitShift AddExpr BitShift_ShiftExpr_star | E
BitShift -> RightBitShift | LeftBitShift


AddExpr -> MultExpr Plus_or_Minus_AddExpr_star
Plus_or_Minus_AddExpr_star -> Plus_or_Minus MultExpr Plus_or_Minus_AddExpr_star | E
Plus_or_Minus -> Plus | Minus

MultExpr -> Unary Asterisk_or_Divide_or_Mod_MultExpr_star
Asterisk_or_Divide_or_Mod_MultExpr_star -> Asterisk_or_Divide_or_Mod Unary Asterisk_or_Divide_or_Mod_MultExpr_star | E
Asterisk_or_Divide_or_Mod -> Asterisk | Divide | Mod

// ----------------------- InPlace
InPlaceOperator -> InPlacePlus | InPlaceMinus | InPlaceTimes | InPlaceDivide | InPlaceMod | InPlaceLeftBitShift | InPlaceRightBitShift | InPlaceBitwiseAnd | InPlaceBitwiseOr | InPlaceBitwiseXor
InPlacePlus -> '\+='
InPlaceMinus -> '-='
InPlaceTimes -> '\*=' 
InPlaceDivide -> '/='
InPlaceMod -> '%='
InPlaceLeftBitShift -> '<<='
InPlaceRightBitShift -> '>>='
InPlaceBitwiseAnd -> '&='
InPlaceBitwiseOr -> '\|='
InPlaceBitwiseXor -> '^='

Unary -> UnaryPlus | UnaryMinus | Unary1Scompl | UnaryLnot | UnaryRef | UnaryDeref | UnaryPreinc | UnaryPredec

UnaryPredec -> Decr Id
UnaryPreinc -> Incr Id
UnaryDeref -> Asterisk Id
UnaryRef -> BitwiseAnd Primary
UnaryLnot -> Not Primary
Unary1Scompl -> FstCompl Primary
UnaryMinus -> Minus Primary
UnaryPlus -> Plus Primary


Incr -> '\+\+'
Decr -> '--'
Divide -> '/'
Plus -> '\+'
Minus -> '-'
Mod -> '%'
BitwiseAnd -> '&'
BitwiseOr -> '\|'
BitwiseXor -> '^'
FstCompl -> '\~'
Equal -> '=='
NotEqual -> '!='


LogicalAnd -> '&&'
LogicalOr -> '\|\|'

Not -> '!'
Less -> '<='
StrictLess -> '<'
Greater -> '>='
StrictGreater -> '>'

RightBitShift -> '>>'
LeftBitShift -> '<<'


Id -> s'[a-zA-Z][a-zA-Z0-9_]*'
BoolConst -> True | False
True -> 'true'
False -> 'false'
IntConst -> r'[0-9]+'
FloatConst -> r'([0-9]+\.[0-9]*)|(\.[0-9]+)'
StrConst -> r'".*"'
Lib -> '<.*>'



NullConst -> 'NULL'


KwElse -> 'else'
KwIf -> 'if'
KwWhile -> 'while'
KwFor -> 'for'
KwPrintf -> 'printf'
KwInclude -> '\#include'

TypeSpec -> KwInt | KwBool | KwFloat | KwVoid
KwInt -> 'int'
KwFloat -> 'float'
KwBool -> 'bool'
KwVoid -> 'void'

Comma -> ','
SemiColon -> ';'
LParenthesis -> '\('
RParenthesis -> '\)'
LBracket -> '{'
RBracket -> '}'
LSquareBracket -> '\['
RSquareBracket -> '\]'
Comment -> r'((//.*\n)|(/\*.*\*/))'
Asterisk -> '\*'
Assign -> '='
Dot -> '\.'
Arrow -> '->'

Space -> _' '
NewLine -> _'\n'