ExecutableProgram -> ProgramUnit ProgramUnit_star | StartCommentBlock ProgramUnit ProgramUnit_star

ProgramUnit_star -> ProgramUnit ProgramUnit_star | E

StartCommentBlock -> EOS

ProgramUnit -> MainProgram

MainProgram -> ProgramStmt MainRange

MainRange -> BodyConstruct BodyConstruct_star EndProgramStmt | EndProgramStmt

BodyConstruct_star -> BodyConstruct BodyConstruct_star | E

ProgramStmt -> Program ProgramName EOS
EndProgramStmt -> EndProgram EndName_opt EOS

EndName_opt -> EndName | E

BodyConstruct -> SpecificationPartConstruct | ExecutableConstruct

SpecificationPartConstruct -> DeclarationConstruct
DeclarationConstruct -> TypeDeclarationStmt

TypeDeclarationStmt -> TypeSpec Colon_Colon_opt EntityDecl EntityDecl_Comma_star EOS
Colon_Colon_opt -> Colon Colon | E
EntityDecl_Comma_star -> EntityDecl EntityDecl_Comma_star | E


EntityDecl -> ObjectName Asterisk_CharLength_opt Equal_Expr_opt
Equal_Expr_opt -> Equal Expr | E
Asterisk_CharLength_opt -> Asterisk CharLength | E


CharLength -> RParenthesis TypeParamValue LParenthesis | ScalarIntLiteralConstant

TypeParamValue -> Expr_Or_Asterisk

TypeSpec -> Integer KindSelector | Double | Complex KindSelector | Logical KindSelector


KindSelector -> RParenthesis Expr LParenthesis



ExecutableConstruct -> ActionStmt | DoConstruct | IfConstruct | EndDoStmt


ActionStmt -> AssignmentStmt | CallStmt | ContinueStmt | PrintStmt

AssignmentStmt -> Name Equal Expr EOS

CallStmt -> Call SubroutineNameUse Parenthesis_Actual_Comma_star_or_epsilon EOS

Parenthesis_Actual_Comma_star_or_epsilon -> RParenthesis ActualArg_Comma_star LParenthesis | E
ActualArg_Comma_star -> Comma ActualArg ActualArg_Comma_star | E

ActualArg -> Expr_Or_Asterisk | Name Equal Expr_Or_Asterisk

Expr_Or_Asterisk -> Expr | Asterisk


ContinueStmt -> Continue EOS

PrintStmt -> Print FormatIdentifier Comma_OutputItemList_opt EOS
Comma_OutputItemList_opt -> Comma OutputItemList | E

FormatIdentifier -> Asterisk

OutputItemList -> OutputItem Comma_OutputItem_star
Comma_OutputItem_star -> Comma OutputItem Comma_OutputItem_star | E

OutputItem -> Expr

DoConstruct -> BlockDoConstruct
BlockDoConstruct -> Do LoopControl_opt EOS

LoopControl_opt -> LoopControl | E

EndDoStmt -> EndDo Name_opt EOS
Name_opt -> Name | E

LoopControl -> While RParenthesis Expr LParenthesis | VariableName Equal IntRealDpExpression Comma IntRealDpExpression Comma_IntRealDpExpression_opt

Comma_IntRealDpExpression_opt -> Comma IntRealDpExpression | E

IntRealDpExpression -> Expr



IfConstruct -> IfThenStmt ExecutionPartConstruct_star ElseIfStmt_ExecutionPartConstruct_star_star ElseStmt_ExecutionPartConstruct_star_opt EndIfStmt
ElseIfStmt_ExecutionPartConstruct_star_star -> ElseIfStmt ExecutionPartConstruct_star ElseIfStmt_ExecutionPartConstruct_star_star | E
ExecutionPartConstruct_star -> ExecutionPartConstruct ExecutionPartConstruct_star | E
ElseStmt_ExecutionPartConstruct_star_opt -> ElseStmt ExecutionPartConstruct_star | E

IfThenStmt -> If RParenthesis ScalarLogicalExpr LParenthesis Then EOS
ElseIfStmt -> Else If RParenthesis ScalarLogicalExpr LParenthesis Then EOS
ElseStmt -> Else EOS
EndIfStmt -> EndIf EOS

ExecutionPartConstruct -> ExecutableConstruct

ScalarLogicalExpr -> Expr


Expr -> Level5Expr

Level5Expr -> EquivOperand EquivOp_EquivOperand_star
EquivOp_EquivOperand_star -> EquivOp EquivOperand EquivOp_EquivOperand_star | E

EquivOperand -> OrOperand OrOp_OrOperand_star
OrOp_OrOperand_star -> OrOp OrOperand OrOp_OrOperand_star | E

OrOperand -> AndOperand AndOp_AndOperand_star
AndOp_AndOperand_star -> AndOp AndOperand AndOp_AndOperand_star | E

AndOperand -> NotOp_opt Level4Expr
NotOp_opt -> NotOp | E

Level4Expr -> Level3Expr RelOp_Level3Expr_star
RelOp_Level3Expr_star -> RelOp Level3Expr RelOp_Level3Expr_star | E

Level3Expr -> Level2Expr ConcatOp_Level2Expr_star
ConcatOp_Level2Expr_star -> ConcatOp Level2Expr ConcatOp_Level2Expr_star | E

Level2Expr -> Sign_opt_AddOperand AddOp_Sign_opt_AddOperand_star
AddOp_Sign_opt_AddOperand_star -> AddOp Sign_opt_AddOperand AddOp_Sign_opt_AddOperand_star | E

Sign_opt_AddOperand -> Sign_opt AddOperand
Sign_opt -> Sign | E


AddOperand -> MultOperand MultOp_MultOperand_star
MultOp_MultOperand_star -> MultOp MultOperand MultOp_MultOperand_star | E


MultOperand -> Level1Expr PowerOp_Level1Expr_star
PowerOp_Level1Expr_star -> PowerOp Level1Expr PowerOp_Level1Expr_star | E



Level1Expr -> Primary

Primary -> Icon | Rcon | Name | RParenthesis Expr Comma_Expr_opt LParenthesis | Scon
Comma_Expr_opt -> Comma Expr | E


Name -> Ident
ArrayName -> Ident
ComponentName -> Ident
EndName -> Ident
DummyArgName -> Ident
FunctionName -> Ident
ImpliedDoVariable -> Ident
ProgramName -> Ident
SubroutineName-> Ident
SubroutineNameUse -> Ident
VariableName -> Ident
ObjectName -> Ident


PowerOp -> '\*\*'
MultOp -> Asterisk | Divise
AddOp -> Sign

Sign -> Plus | Minus


ConcatOp -> '//'
RelOp -> Equal | NotEqual | StrictLess | LessEqual | StrictGreater | GreaterEqual

NotOp -> '\.not\.'
AndOp -> '\.and\.'
OrOp -> '\.or\.'
EquivOp -> Equivalent | NotEquivalent

ScalarIntLiteralConstant -> Icon


Rcon -> r'([0-9]+\.[0-9]*)|(\.[0-9]+)'
Icon -> r'[0-9]+'
SconSingle -> r'[\'](~[\']|\'\')*[\']'
SconDouble -> r'["](~["]|"")*["]'
Scon -> SconSingle | SconDouble


Ident -> r'[A-Za-z][A-Za-z0-9_]*'

EOS -> r'((!~[\n]*)?\n[ ]*)+'

Program -> 'program'
EndProgram -> 'end program'
EndDo -> 'end do'
EndIf -> 'end if'
Colon -> ':'
Comma -> ','
Equal -> '='
Asterisk -> '\*'
RParenthesis -> '\('
LParenthesis -> '\)'
Integer -> 'integer'
Real -> 'real'
Double -> 'double precision'
Complex -> 'complex'
Character -> 'character'
Logical -> 'logical'
Kind -> 'kind'
Len -> 'len'
Call -> 'call'
Continue -> 'continue'
Print -> 'print'
Do -> 'do'
While -> 'while'
If -> 'if'
Else -> 'else'
Then -> 'then'
Divise -> '/'
Plus -> '\+'
Minus -> '-'
Equal -> '(==)|(\.eq\.)'
NotEqual -> '(/=)|(\.ne\.)'
StrictLess -> '(<)|(\.lt\.)'
LessEqual -> '(<=)|(\.le\.)'
StrictGreater -> '(>)|(\.gt\.)'
GreaterEqual -> '(>=)|(\.ge\.)'
Equivalent -> '\.eqv\.'
NotEquivalent -> '\.neqv\.'