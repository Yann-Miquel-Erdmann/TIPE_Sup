\begin{MintedVerbatim}[commandchars=\\\{\}]
\PYG{k}{open} \PYG{n+nc}{TraductionFortran}
\PYG{k}{open} \PYG{n+nc}{TraductionC}
\PYG{k}{open} \PYG{n+nc}{DetAutomaton}
\PYG{k}{open} \PYG{n+nc}{LL1}
\PYG{k}{open} \PYG{n+nc}{ConvertToAbstract}
\PYG{k}{open} \PYG{n+nc}{Environnement}
\PYG{k}{open} \PYG{n+nc}{Automates}
\PYG{k}{open} \PYG{n+nc}{Grammar}

\PYG{k}{let} \PYG{n}{transpile\PYGZus{}Fortran\PYGZus{}to\PYGZus{}C} \PYG{o}{(}\PYG{n}{fortran\PYGZus{}file\PYGZus{}name} \PYG{o}{:} \PYG{k+kt}{string}\PYG{o}{)} \PYG{o}{(}\PYG{n}{c\PYGZus{}file\PYGZus{}name} \PYG{o}{:} \PYG{k+kt}{string}\PYG{o}{)} \PYG{o}{:}
    \PYG{k+kt}{unit} \PYG{o}{=}
  \PYG{k}{let} \PYG{n}{lexemes} \PYG{o}{=} \PYG{n}{exec\PYGZus{}of\PYGZus{}file} \PYG{n}{syntax\PYGZus{}automate\PYGZus{}det} \PYG{n}{fortran\PYGZus{}file\PYGZus{}name} \PYG{k}{in}
  \PYG{k}{let} \PYG{n}{arbre\PYGZus{}syntaxique} \PYG{o}{=} \PYG{n}{analyse\PYGZus{}LL1} \PYG{n+nn}{Grammar}\PYG{p}{.}\PYG{n}{grammar} \PYG{n}{lexemes} \PYG{k}{in}
  \PYG{k}{let} \PYG{n}{arbre\PYGZus{}syntaxique\PYGZus{}abstrait} \PYG{o}{=} \PYG{n}{convert\PYGZus{}to\PYGZus{}abstract} \PYG{n}{arbre\PYGZus{}syntaxique} \PYG{k}{in}
  \PYG{k}{let} \PYG{n}{env} \PYG{o}{=} \PYG{n}{create\PYGZus{}env\PYGZus{}from\PYGZus{}ast} \PYG{n}{arbre\PYGZus{}syntaxique\PYGZus{}abstrait} \PYG{k}{in}
  \PYG{c}{(*}\PYG{c}{ print\PYGZus{}env env; }\PYG{c}{*)}
  \PYG{k}{let} \PYG{n}{code\PYGZus{}C} \PYG{o}{=} \PYG{n}{convert\PYGZus{}ast\PYGZus{}to\PYGZus{}C} \PYG{o}{[} \PYG{n}{arbre\PYGZus{}syntaxique\PYGZus{}abstrait} \PYG{o}{]} \PYG{n}{env} \PYG{n+nb+bp}{[]} \PYG{k}{in}
  \PYG{k}{let} \PYG{n}{out\PYGZus{}file} \PYG{o}{=} \PYG{n}{open\PYGZus{}out} \PYG{n}{c\PYGZus{}file\PYGZus{}name} \PYG{k}{in}
  \PYG{n}{output\PYGZus{}string} \PYG{n}{out\PYGZus{}file} \PYG{n}{code\PYGZus{}C}\PYG{o}{;}
  \PYG{n}{close\PYGZus{}out} \PYG{n}{out\PYGZus{}file}

\PYG{k}{let} \PYG{n}{transpile\PYGZus{}Fortran\PYGZus{}to\PYGZus{}Fortran} \PYG{o}{(}\PYG{n}{fortran\PYGZus{}file\PYGZus{}name} \PYG{o}{:} \PYG{k+kt}{string}\PYG{o}{)}
    \PYG{o}{(}\PYG{n}{c\PYGZus{}file\PYGZus{}name} \PYG{o}{:} \PYG{k+kt}{string}\PYG{o}{)} \PYG{o}{:} \PYG{k+kt}{unit} \PYG{o}{=}
  \PYG{k}{let} \PYG{n}{lexemes} \PYG{o}{=} \PYG{n}{exec\PYGZus{}of\PYGZus{}file} \PYG{n}{syntax\PYGZus{}automate\PYGZus{}det} \PYG{n}{fortran\PYGZus{}file\PYGZus{}name} \PYG{k}{in}
  \PYG{k}{let} \PYG{n}{arbre\PYGZus{}syntaxique} \PYG{o}{=} \PYG{n}{analyse\PYGZus{}LL1} \PYG{n}{grammar} \PYG{n}{lexemes} \PYG{k}{in}
  \PYG{k}{let} \PYG{n}{arbre\PYGZus{}syntaxique\PYGZus{}abstrait} \PYG{o}{=} \PYG{n}{convert\PYGZus{}to\PYGZus{}abstract} \PYG{n}{arbre\PYGZus{}syntaxique} \PYG{k}{in}
  \PYG{k}{let} \PYG{n}{env} \PYG{o}{=} \PYG{n}{create\PYGZus{}env\PYGZus{}from\PYGZus{}ast} \PYG{n}{arbre\PYGZus{}syntaxique\PYGZus{}abstrait} \PYG{k}{in}

  \PYG{k}{let} \PYG{n}{code\PYGZus{}Fortran} \PYG{o}{=} \PYG{n}{convert\PYGZus{}ast\PYGZus{}to\PYGZus{}Fortran} \PYG{o}{[} \PYG{n}{arbre\PYGZus{}syntaxique\PYGZus{}abstrait} \PYG{o}{]} \PYG{n}{env} \PYG{k}{in}
  \PYG{k}{let} \PYG{n}{out\PYGZus{}file} \PYG{o}{=} \PYG{n}{open\PYGZus{}out} \PYG{n}{c\PYGZus{}file\PYGZus{}name} \PYG{k}{in}
  \PYG{n}{output\PYGZus{}string} \PYG{n}{out\PYGZus{}file} \PYG{n}{code\PYGZus{}Fortran}\PYG{o}{;}
  \PYG{n}{close\PYGZus{}out} \PYG{n}{out\PYGZus{}file}
\end{MintedVerbatim}
